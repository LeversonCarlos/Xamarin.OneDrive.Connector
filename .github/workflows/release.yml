name: Release

on:
  push:
    branches: [ master ]
  
jobs:
  build:
    name: Build Packages
    runs-on: windows-latest

    steps:
    
      - name: Checkout Source Repository
        uses: actions/checkout@v2
      
      - name: Setup MsBuild
        uses: microsoft/setup-msbuild@v1
        
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"          
                    
      - name: Build and Pack the Connector
        run: msbuild ./srcs/Xamarin.OneDrive.Connector -r -p:Configuration=Release /p:BuildVersion=${{ github.run_number }} /t:pack 
          
      - name: Store the Connector Artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: connector-artifact
          path: ./srcs/Xamarin.OneDrive.Connector/bin/Release 

      - name: Build and Pack the Profiles Plugin
        run: msbuild ./srcs/Xamarin.OneDrive.Connector.Profile -r -p:Configuration=Release /p:BuildVersion=${{ github.run_number }} /t:pack 
          
      - name: Store the Profiles Artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: profiles-artifact
          path: ./srcs/Xamarin.OneDrive.Connector.Profile/bin/Release 

      - name: Build and Pack the Files Plugin
        run: msbuild ./srcs/Xamarin.OneDrive.Connector.Files -r -p:Configuration=Release /p:BuildVersion=${{ github.run_number }} /t:pack 
          
      - name: Store the Files Artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: files-artifact
          path: ./srcs/Xamarin.OneDrive.Connector.Files/bin/Release 
          
#  deploy: 
#    needs: [build]
#    name: Publish Packages
#    runs-on: ubuntu-latest
#    
#    steps:
#    
#      - name: Setup .NET Core
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: 3.1.101
#              
#      - name: Retrieve Artifacts
#        uses: actions/download-artifact@v1.0.0
#        with:
#          name: artifacts
#        
#      - name: Publish Artifact to NuGet
#        run: dotnet nuget push artifacts/*.nupkg --api-key ${{ secrets.NUGET_TOKEN_FOR_GITHUB }} --source https://nuget.org --skip-duplicate --no-symbols true 
