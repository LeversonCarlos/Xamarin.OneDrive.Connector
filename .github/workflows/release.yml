name: Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:
      # Inputs the workflow accepts.
      inputs:
        name:
          # Friendly description to be shown in the UI instead of 'name'
          description: 'Person to greet'
          # Default value if no value is explicitly provided
          default: 'World'
          # Input has to be provided for the workflow to run
          required: true    
  
jobs:

  tests:
    name: Validate Pull Request
    runs-on: windows-latest

    steps:

      - name: Checkout Source Repository
        uses: actions/checkout@v2
      
      - name: Setup MsBuild Tooling
        uses: microsoft/setup-msbuild@v1

      - name: Build the LocalDrive Test Project
        working-directory: 'tests/CloudDrive.Connector.LocalDriveTests/'
        run: msbuild -restore -p:Configuration=Debug /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        
      - name: Run the LocalDrive Tests
        working-directory: 'tests/CloudDrive.Connector.LocalDriveTests/'
        run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Build the OneDrive Test Project
        working-directory: 'tests/CloudDrive.Connector.OneDriveTests/'
        run: msbuild -restore -p:Configuration=Debug /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        
      - name: Run the OneDrive Tests
        working-directory: 'tests/CloudDrive.Connector.OneDriveTests/'
        run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Send Tests Report to Codecov.IO
        run: |
          curl -s https://codecov.io/bash | bash
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}                    

  build:
    needs: [tests]
    name: Build Packages
    runs-on: windows-latest

    steps:
    
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"          

      - name: Checkout Source Repository
        uses: actions/checkout@v2
      
      - name: Setup MsBuild Tooling
        uses: microsoft/setup-msbuild@v1
                          
      - name: Define release type
        id: release_type
        run: |
          if ($REF -eq 'refs/heads/master') {
              echo "::set-output name=suffixVersion::''"
          }
          else {
              echo "::set-output name=suffixVersion::'-alpha'"
          }
        env:
          REF: ${{ github.ref }}        
                    
      - name: Build and Pack the Common Interfaces
        run: msbuild ./sources/CloudDrive.Connector.Common -r -p:Configuration=Release /p:BuildVersion=${{ github.run_number }} /p:SuffixVersion=${{ steps.release_type.outputs.suffixVersion }} /t:pack 
      - name: Store the Common Interfaces
        uses: actions/upload-artifact@v1.0.0
        with:
          name: common-artifact
          path: ./sources/CloudDrive.Connector.Common/bin/Release 

      - name: Build and Pack the OneDrive Connector
        run: msbuild ./sources/CloudDrive.Connector.OneDrive -r -p:Configuration=Release /p:BuildVersion=${{ github.run_number }} /p:SuffixVersion=${{ steps.release_type.outputs.suffixVersion }} /t:pack 
      - name: Store the OneDrive Connector
        uses: actions/upload-artifact@v1.0.0
        with:
          name: onedrive-artifact
          path: ./sources/CloudDrive.Connector.OneDrive/bin/Release 

      - name: Build and Pack the LocalDrive Connector
        run: msbuild ./sources/CloudDrive.Connector.LocalDrive -r -p:Configuration=Release /p:BuildVersion=${{ github.run_number }} /p:SuffixVersion=${{ steps.release_type.outputs.suffixVersion }} /t:pack 
      - name: Store the LocalDrive Connector
        uses: actions/upload-artifact@v1.0.0
        with:
          name: localdrive-artifact
          path: ./sources/CloudDrive.Connector.LocalDrive/bin/Release 
          
  deploy: 
    needs: [build]
    name: Publish Packages
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
              
      - name: Retrieve the Common Artifacts
        uses: actions/download-artifact@v1.0.0
        with:
          name: common-artifact
      - name: Publish Common Artifact to NuGet
        run: dotnet nuget push common-artifact/*.nupkg --api-key ${{ secrets.NUGET_TOKEN_FOR_GITHUB }} --source https://nuget.org --skip-duplicate --no-symbols true 

      - name: Retrieve the OneDrive Artifacts
        uses: actions/download-artifact@v1.0.0
        with:
          name: onedrive-artifact
      - name: Publish OneDrive Artifact to NuGet
        run: dotnet nuget push onedrive-artifact/*.nupkg --api-key ${{ secrets.NUGET_TOKEN_FOR_GITHUB }} --source https://nuget.org --skip-duplicate --no-symbols true 

      - name: Retrieve the LocalDrive Artifacts
        uses: actions/download-artifact@v1.0.0
        with:
          name: localdrive-artifact
      - name: Publish LocalDrive Artifacts to NuGet
        run: dotnet nuget push localdrive-artifact/*.nupkg --api-key ${{ secrets.NUGET_TOKEN_FOR_GITHUB }} --source https://nuget.org --skip-duplicate --no-symbols true 
